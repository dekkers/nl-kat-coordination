name: Build Debian and Ubuntu packages

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'release-*'
    tags:
      - '*'

jobs:
  changes:
    runs-on: ubuntu-22.04
    outputs:
      boefje: ${{ steps.filter.outputs.boefje }}
      bytes: ${{ steps.filter.outputs.bytes }}
      keiko: ${{ steps.filter.outputs.keiko }}
      mula: ${{ steps.filter.outputs.mula }}
      octopoes: ${{ steps.filter.outputs.octopoes }}
      rocky: ${{ steps.filter.outputs.rocky }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          boefje:
            - 'boefje/**'
            - 'octopoes/**'
            - '.github/workflows/debian_package.yml'
          bytes:
            - 'bytes/**'
            - '.github/workflows/debian_package.yml'
          keiko:
            - 'keiko/**'
            - '.github/workflows/debian_package.yml'
          mula:
            - 'mula/**'
            - '.github/workflows/debian_package.yml'
          octopoes:
            - 'octopoes/**'
            - '.github/workflows/debian_package.yml'
          rocky:
            - 'rocky/**'
            - 'octopoes/**'
            - '.github/workflows/debian_package.yml'

  build-package:
    strategy:
      matrix:
        dist: [debian11, debian12, ubuntu22.04]
        package: [boefjes, bytes, keiko, mula, octopoes, rocky]
    runs-on: ubuntu-22.04
    env:
      PKG_NAME: kat-${{ matrix.package }}
    needs: changes
    if: ${{ needs.changes.outputs.backend == matrix.package }} }}

    steps:
      - uses: actions/checkout@v3

      - name: Generate version.py and set RELEASE_VERSION
        run: |
          pip install setuptools-scm==7.1.0
          echo "RELEASE_VERSION=$(python -m setuptools_scm | sed s/rc/~rc/)" >> $GITHUB_ENV
          cp _version.py boefjes/boefjes/version.py
          cp _version.py boefjes/boefjes/katalogus/version.py
          cp _version.py bytes/bytes/version.py
          cp _version.py keiko/keiko/version.py
          cp _version.py mula/scheduler/version.py
          cp _version.py octopoes/octopoes/version.py
          cp _version.py rocky/rocky/version.py

      - name: Run debian package build
        uses: addnab/docker-run-action@v3
        with:
          run: packaging/scripts/build-debian-package.sh
          registry: ghcr.io
          image: ghcr.io/minvws/nl-kat-${{ matrix.dist }}-build-image:latest
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          options: -v ${{ github.workspace }}/${{ matrix.package }}:/app
            -v ${{ github.workspace }}/octopoes:/octopoes
            -e REPOSITORY=${{ github.repository }}
            -e RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            -e RELEASE_TAG=${{ env.RELEASE_TAG }}
            -e PKG_NAME=${{ env.PKG_NAME }}
            --workdir /app

      - name: Upload .deb to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.PKG_NAME}}_${{ env.RELEASE_VERSION }}_${{ matrix.dist }}.deb
          path: ${matrix.package}/build/${{env.PKG_NAME}}_${{ env.RELEASE_VERSION }}_amd64.deb
